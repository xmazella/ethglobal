import { Request, Response } from "express";
import {
  SismoConnect,
  AuthType,
  SismoConnectVerifiedResult,
  ClaimType,
  SismoConnectConfig,
  SignatureRequest,
  AuthRequest,
  ClaimRequest,
  SismoConnectResponse
} from "@sismo-core/sismo-connect-server";

const config: SismoConnectConfig = {
  appId: "0xafabec94b12842146d5f06acaac25ccd",
};

export async function login(req: Request, res: Response) {

  // reusing the exact same config as the front end's
  const sismoConnect = SismoConnect({ config });

  // const sismoConnectResponse = req.body as SismoConnectResponse | null

  const sismoConnectResponse = {
    "appId": "0xafabec94b12842146d5f06acaac25ccd",
    "namespace": "main",
    "version": "sismo-connect-v1.1",
    "signedMessage": "Connect using sismo",
    "proofs": [
      {
        "auths": [
          {
            "authType": 0,
            "userId": "0x085c55f34f53a5366c3567011d124babb22279fa537accb3f2069b719924c20b",
            "extraData": "",
            "isSelectableByUser": true
          }
        ],
        "proofData": "0x2663dcd33a94d9db4d3f59bd0c9de58b92ae1f09c2e204f0aacaaae838b24e8b171da2fd3365b541f7838e3250537207477402cab6731aaac73b45ab939ea2bb25a415fe5ea7633f667847e2de51c8b29afb9793c59a944011990b4fcffbfb5916742b2e58b849c746066362fe4b0173b5ad1a91a581e16f9d603b7b3bcf784b2f9602a7b9d9b3477ece9b1dc488860893d7c2e52333b1b59100e2cfee71288c105b1148be1253ee8978fa1a71eb8d2966894bd1af291ee5758f05b0393878f52e5c51483d413910c3d5a2c6b03f31641463eaea3a0ec3aa84ef51794ca3aee317c1acb4bbddea96c5b8b46f5003c431d47fa7c4b3b465c170b5de51d231e85600000000000000000000000000000000000000000000000000000000000000000d660039487c39ab2a804d0726e085da268178c90111a9cd02e095a2c1bd882b07f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085c55f34f53a5366c3567011d124babb22279fa537accb3f2069b719924c20b1d708bd5aa99f93931c5fb07ae12ed2cdea4f6b55fe01d317ca09acd3fbb46ba00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "extraData": "",
        "provingScheme": "hydra-s3.1"
      },
      {
        "claims": [
          {
            "claimType": 0,
            "groupId": "0x75e135ba6f62b00a7ae194920ff8a665",
            "groupTimestamp": "latest",
            "value": 1,
            "extraData": "",
            "isSelectableByUser": false
          }
        ],
        "proofData": "0x1f952b87aa2d821afae6180e92cb1e652a6c3acdd36e5212a334c64c1d042a3a294eb1e639c0343c62dadaf1599929fd5a4f19fafcb53ed007586f283b04e42a0edd43adfd549f3e6e1aabdd5cdf221e8d19260910acc5bb940570b71d3a2179094c78ecf4a346269201108857484277913f41533a8f1d378f667aae736ead9b0a7958dafadf448efa9a2ee5a34ed6e5a7bb19921ff3216dbce9c0bd9e69df240b438e47afd4f3ba80607bdb0cc6b7aabbfe56aab1463edbf9e7f3dae42006322d5b8ec2245e43b459d20f64dc2ee2da44dd61c19de60a2d83990276a641ff0d07ed6e49c9ab0d35ade4e5ad78b0af19457b8560893f56cb58aa99802685f70f00000000000000000000000000000000000000000000000000000000000000000d660039487c39ab2a804d0726e085da268178c90111a9cd02e095a2c1bd882b07f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa1d411bb59594f38fdceff1e564fc4c3a75dbc5144fe9e069786fe86e7ba5b5680d88d46a25c21e01a62708e47540048032a5e70482f8bcc1e50c2d8363f2d45a0c6be6a1963ae16f90226fe087faff62c7d41a05efa726fa5a502dc55b74e83f0000000000000000000000000000000000000000000000000000000000000001151898d4acff6fb70a4109250cf5f5ab1bf9a3d480011edd783c14d81ffffffe0000000000000000000000000000000000000000000000000000000000000000085c55f34f53a5366c3567011d124babb22279fa537accb3f2069b719924c20b1d708bd5aa99f93931c5fb07ae12ed2cdea4f6b55fe01d317ca09acd3fbb46ba00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "extraData": "",
        "provingScheme": "hydra-s3.1"
      },
      {
        "claims": [
          {
            "claimType": 0,
            "groupId": "0x078b5d9514580634859c634c9f9dff4f",
            "groupTimestamp": "latest",
            "value": 1,
            "extraData": "",
            "isSelectableByUser": false
          }
        ],
        "proofData": "0x0a9e97291f62075fdef35c99d95adf7697dc9dae1214bc5315c10394caa857380487a1ee45f5f3a95c4c02796d46c7f8aad55f522baa0995eae2c0179028627110a29c73b0fe87fc6ff7eb9666b238e0dca838a6a8aa559be2ef0dc7b9359c5f1f9c5641d08e248c64a7f9ef57cfd8210861fb09b89a5e29ee03017c518851cb2cbb6eab44b9f9d8f83221ece29158e2d9ca972e68417ffc3cf832d62d5fc60624c2ec40f9a54005d4d6ae83ecac2e1e67e983bfd1985cecdc9bfc11da7104f52cf644433bb707beb1cf79476ee15729f3e235de889c8a3bd5a63e883a68bd091472d337e09234c1e2dfdf29d003a1d565bcf4117f50e5bcec007d05e196e42100000000000000000000000000000000000000000000000000000000000000000d660039487c39ab2a804d0726e085da268178c90111a9cd02e095a2c1bd882b07f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa1d411bb59594f38fdceff1e564fc4c3a75dbc5144fe9e069786fe86e7ba5b56805072fbd8f492e98cb3271bc41a9a2e418232c3c70bf50a396223fce0f1764cf2bd6c31dd30b5493ed787ecc534f550dc835762ebf76b6e18e0beb323ed970a00000000000000000000000000000000000000000000000000000000000000001078b5d9514580634859c634c9f9dff4f6c6174657374000000000000000000000000000000000000000000000000000000000000000000000000000000000000085c55f34f53a5366c3567011d124babb22279fa537accb3f2069b719924c20b1d708bd5aa99f93931c5fb07ae12ed2cdea4f6b55fe01d317ca09acd3fbb46ba00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "extraData": "",
        "provingScheme": "hydra-s3.1"
      },
      {
        "claims": [
          {
            "claimType": 0,
            "groupId": "0xf4777295c7afbdf16e6bd43c93ddcdb5",
            "groupTimestamp": "latest",
            "value": 1,
            "extraData": "",
            "isSelectableByUser": false
          }
        ],
        "proofData": "0x1be6dbc0c03a8b39f3923d54f5ad16413b84479f3c72e8601367281f000cd4731f900a965814513ad6f52683f32e87ea28b4730ac0a5064d699b2d301b6809fb2174da64bc7e05dcdb43921246ade78cabed853c027d0731bfcd7374b9451f9f03aa37f3eaec3a7ea0fa320e91f2683cac3b57cb7051bfdaefdeb3dfd2e710b923fea6257cf5b9dd0ac054e8b178eff0832395e33251aac125d96d7c7a6187a528eddd9617c608b8df219304c0d8fc0a7de17b68209ae431f4921b3a48da995c1c8af8c87b65aa775b695bbfdf0d079dd501dc1613ad50191fe22b58297d9d2c210fe7753ec79fec2f5091ba76f8fea90a0b98545a14bb8f8b492054573b938200000000000000000000000000000000000000000000000000000000000000000d660039487c39ab2a804d0726e085da268178c90111a9cd02e095a2c1bd882b07f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa1d411bb59594f38fdceff1e564fc4c3a75dbc5144fe9e069786fe86e7ba5b5682ab37d6685222bd51b2e62db1e297e9607af2ef98b20dd24444ca97b33692bf412d8c2d8af593e29e3c3542335f89d2fdd3af9ef3166475f6ecd98b5e2d430f100000000000000000000000000000000000000000000000000000000000000010281ea5761b79d20d4da77ac0c5713e3a35deafb12d4cd29ac96341c4ffffffb0000000000000000000000000000000000000000000000000000000000000000085c55f34f53a5366c3567011d124babb22279fa537accb3f2069b719924c20b1d708bd5aa99f93931c5fb07ae12ed2cdea4f6b55fe01d317ca09acd3fbb46ba00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "extraData": "",
        "provingScheme": "hydra-s3.1"
      }
    ]
  } as SismoConnectResponse


  
  if (sismoConnectResponse === null) {
    res.status(400).json("Bad sismo response")
  } else {

    const result: SismoConnectVerifiedResult = await sismoConnect.verify(
      sismoConnectResponse, // copied from the previous step or received from API call
      {
        auths: [
          { authType: AuthType.VAULT }, 
        ],
        claims: [
          { groupId: "0x75e135ba6f62b00a7ae194920ff8a665" }, // basique
          { groupId: "0x078b5d9514580634859c634c9f9dff4f", isOptional: true }, // xmtp
          { groupId: "0xf4777295c7afbdf16e6bd43c93ddcdb5", isOptional: true }, // post on lens
        ],
        signature: { message: "Connect using sismo", isSelectableByUser: true} ,
      }
    );

    console.log(result.claims)
    res.status(200).json({ data: "done" })
  }
}
